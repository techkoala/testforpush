<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Nginx - 标签 - TechKoala - Input/Output</title>
        <link>https://www.techkoala.net/tags/nginx/</link>
        <description>Nginx - 标签 - TechKoala - Input/Output</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>admin@techkoala.net (TechKoala)</managingEditor>
            <webMaster>admin@techkoala.net (TechKoala)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 20 Apr 2021 14:17:01 &#43;0800</lastBuildDate><atom:link href="https://www.techkoala.net/tags/nginx/" rel="self" type="application/rss+xml" /><item>
    <title>使用 Nginx 实现多服务复用端口</title>
    <link>https://www.techkoala.net/nginx_port_reuse/</link>
    <pubDate>Tue, 20 Apr 2021 14:17:01 &#43;0800</pubDate><author>
        <name>TechKoala</name>
    </author><guid>https://www.techkoala.net/nginx_port_reuse/</guid>
    <description><![CDATA[<blockquote>
<p>利用 Nginx 在单一服务器上搭建多个同端口的服务</p>
</blockquote>
<h2 id="说明" class="headerLink">
    <a href="#%e8%af%b4%e6%98%8e" class="header-mark"></a>说明</h2><p>目前服务器上运行以下服务：</p>
<ul>
<li><code>Trojan</code></li>
<li><code>Xray</code></li>
<li><code>frp</code> + <code>Bitwarden</code> 实现内网穿透访问</li>
<li><code>FreshRSS</code></li>
</ul>
<p>三个服务使用了不同域名进行区分，但为了便捷，都使用 <code>443</code> 端口。</p>
<h2 id="流程概览" class="headerLink">
    <a href="#%e6%b5%81%e7%a8%8b%e6%a6%82%e8%a7%88" class="header-mark"></a>流程概览</h2><ol>
<li>采用 <code>Docker</code> 在本地服务器上搭建 <code>Bitwarden</code>，配置并运行 <code>frpc</code> 指向服务器上的 <code>frps</code></li>
<li>在服务器上搭建其他网站或者需要使用 <code>443</code> 端口的服务（如：<code>Trojan</code>)，配置运行 <code>frps</code></li>
<li>采用 <code>Docker</code> 搭建 FreshRSS，首先使用 IP:Port 完成相关配置，然后配置域名，申请证书</li>
<li>安装 <code>Nginx</code>，这里需要利用 <code>Nginx</code> 的 <code>stream_ssl_preread</code> 模块，使用<code>nginx -V</code>查看是否包含该模块。（该模块在 <code>Nginx 1.19.2</code> 已默认包含，但 <code>Ubuntu</code> 等发行版还在使用更老的 <code>stable</code> 版本，需要手动添加 <code>mainline</code> 版本源，并更新 <code>Nginx</code> 到最新版本）</li>
</ol>
<h2 id="获取-ssl-证书" class="headerLink">
    <a href="#%e8%8e%b7%e5%8f%96-ssl-%e8%af%81%e4%b9%a6" class="header-mark"></a>获取 SSL 证书</h2><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ sudo apt install certbot python3-certbot-nginx
</span></span><span class="line"><span class="cl">$ sudo certbot --nginx -d example.com -d www.example.com
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="本地配置文件" class="headerLink">
    <a href="#%e6%9c%ac%e5%9c%b0%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6" class="header-mark"></a>本地配置文件</h2><h3 id="frpcini" class="headerLink">
    <a href="#frpcini" class="header-mark"></a>frpc.ini</h3><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[common]
</span></span><span class="line"><span class="cl">server_addr = xxx.xxx.xxx.xxx           # 服务器地址
</span></span><span class="line"><span class="cl">server_port = xxx                       # 与服务器 frps 通信的端口
</span></span><span class="line"><span class="cl">token = xxxxxx                          # frp 验证密钥
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">[bitwarden_https]
</span></span><span class="line"><span class="cl">type = https
</span></span><span class="line"><span class="cl">local_port = 443
</span></span><span class="line"><span class="cl">custom_domains = xxx.xxx.xxx            # Bitwarden 域名
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="本地-nginxcof" class="headerLink">
    <a href="#%e6%9c%ac%e5%9c%b0-nginxcof" class="header-mark"></a>本地 nginx.cof</h3><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">user www www;
</span></span><span class="line"><span class="cl">worker_processes auto;
</span></span><span class="line"><span class="cl">error_log /var/log/nginx/error.log warn;
</span></span><span class="line"><span class="cl">pid /var/run/nginx.pid;
</span></span><span class="line"><span class="cl">worker_rlimit_nofile 8192;
</span></span><span class="line"><span class="cl">events {
</span></span><span class="line"><span class="cl">    worker_connections 4096;
</span></span><span class="line"><span class="cl">}
</span></span><span class="line"><span class="cl">http {
</span></span><span class="line"><span class="cl">    include mime.types;
</span></span><span class="line"><span class="cl">    default_type application/octet-stream;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    client_max_body_size 0;
</span></span><span class="line"><span class="cl">    client_body_buffer_size 512k;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    sendfile on;
</span></span><span class="line"><span class="cl">    sendfile_max_chunk 1m;
</span></span><span class="line"><span class="cl">    tcp_nopush on;
</span></span><span class="line"><span class="cl">    tcp_nodelay on;
</span></span><span class="line"><span class="cl">    keepalive_timeout 65;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    types_hash_max_size 4096;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    proxy_cache_path /var/run/nginx-proxy-cache levels=1:2 keys_zone=cache_one:20m inactive=1d max_size=500m;
</span></span><span class="line"><span class="cl">    proxy_cache cache_one;
</span></span><span class="line"><span class="cl">    proxy_temp_path /var/run/proxy_temp_dir;
</span></span><span class="line"><span class="cl">    proxy_temp_file_write_size 128k;
</span></span><span class="line"><span class="cl">    proxy_next_upstream error timeout invalid_header http_500 http_503 http_404;
</span></span><span class="line"><span class="cl">    proxy_buffer_size 16k;
</span></span><span class="line"><span class="cl">    proxy_busy_buffers_size 24k;
</span></span><span class="line"><span class="cl">    proxy_buffers 64 4k;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    gzip on;
</span></span><span class="line"><span class="cl">    gzip_min_length 1k;
</span></span><span class="line"><span class="cl">    gzip_buffers 4 16k;
</span></span><span class="line"><span class="cl">    gzip_http_version 1.1;
</span></span><span class="line"><span class="cl">    gzip_comp_level 2;
</span></span><span class="line"><span class="cl">    gzip_types text/plain application/javascript application/x-javascript text/javascript text/css application/xml;
</span></span><span class="line"><span class="cl">    gzip_vary on;
</span></span><span class="line"><span class="cl">    gzip_proxied expired no-cache no-store private auth;
</span></span><span class="line"><span class="cl">    gzip_disable &#34;MSIE [1-6]\.&#34;;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    server_tokens off;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    server {
</span></span><span class="line"><span class="cl">        listen 443 ssl http2;
</span></span><span class="line"><span class="cl">        server_name xxx.xxx.xxx;                        # 域名
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        ssl_certificate /xxx/cert/fullchain.pem;        # 证书路径
</span></span><span class="line"><span class="cl">        ssl_certificate_key /xxx/cert/privkey.pem;
</span></span><span class="line"><span class="cl">        ssl_protocols TLSv1.2 TLSv1.3;
</span></span><span class="line"><span class="cl">        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
</span></span><span class="line"><span class="cl">        ssl_prefer_server_ciphers off;
</span></span><span class="line"><span class="cl">        ssl_session_cache shared:SSL:10m;
</span></span><span class="line"><span class="cl">        ssl_session_timeout 1d;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        location / {
</span></span><span class="line"><span class="cl">            proxy_pass http://127.0.0.1:8080;
</span></span><span class="line"><span class="cl">            proxy_set_header Host $host;
</span></span><span class="line"><span class="cl">            proxy_set_header X-Real-IP $remote_addr;
</span></span><span class="line"><span class="cl">            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
</span></span><span class="line"><span class="cl">            proxy_set_header X-Forwarded-Proto $scheme;
</span></span><span class="line"><span class="cl">        }
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        location /notifications/hub {
</span></span><span class="line"><span class="cl">            proxy_pass http://127.0.0.1:3012;
</span></span><span class="line"><span class="cl">            proxy_set_header Upgrade $http_upgrade;
</span></span><span class="line"><span class="cl">            proxy_set_header Connection &#34;upgrade&#34;;
</span></span><span class="line"><span class="cl">        }
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        location /notifications/hub/negotiate {
</span></span><span class="line"><span class="cl">            proxy_pass http://127.0.0.1:8080;
</span></span><span class="line"><span class="cl">        }
</span></span><span class="line"><span class="cl">    }
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="服务器配置文件" class="headerLink">
    <a href="#%e6%9c%8d%e5%8a%a1%e5%99%a8%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6" class="header-mark"></a>服务器配置文件</h2><h3 id="服务器-nginxcof" class="headerLink">
    <a href="#%e6%9c%8d%e5%8a%a1%e5%99%a8-nginxcof" class="header-mark"></a>服务器 nginx.cof</h3><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span><span class="lnt">82
</span><span class="lnt">83
</span><span class="lnt">84
</span><span class="lnt">85
</span><span class="lnt">86
</span><span class="lnt">87
</span><span class="lnt">88
</span><span class="lnt">89
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">user www-data;
</span></span><span class="line"><span class="cl">worker_processes auto;
</span></span><span class="line"><span class="cl">pid /var/run/nginx.pid;
</span></span><span class="line"><span class="cl">include /etc/nginx/modules-enabled/*.conf;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">events {
</span></span><span class="line"><span class="cl">	worker_connections 768;
</span></span><span class="line"><span class="cl">	# multi_accept on;
</span></span><span class="line"><span class="cl">}
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">stream {
</span></span><span class="line"><span class="cl">    map $ssl_preread_server_name $name {
</span></span><span class="line"><span class="cl">        xxx.techkoala.net frps-bitwarden;   # Bitwarden 域名
</span></span><span class="line"><span class="cl">        xxx.techkoala.net trojan;           # Trojan 域名
</span></span><span class="line"><span class="cl">        xxx.techkoala.net rss;              # FreshRSS 域名
</span></span><span class="line"><span class="cl">        xxx.techkoala.net xtls;             # Xray 域名
</span></span><span class="line"><span class="cl">    }
</span></span><span class="line"><span class="cl">    upstream frps-bitwarden {
</span></span><span class="line"><span class="cl">        server 127.0.0.1:8080;         # Bitwarden的 frps 端口
</span></span><span class="line"><span class="cl">    }
</span></span><span class="line"><span class="cl">    upstream trojan {
</span></span><span class="line"><span class="cl">        server 127.0.0.1:4443;         # Trojan 本地监听端口
</span></span><span class="line"><span class="cl">    }
</span></span><span class="line"><span class="cl">    upstream rss {
</span></span><span class="line"><span class="cl">        server 172.17.0.1:39955;       # FreshRSS Docker IP 以及映射本地监听端口
</span></span><span class="line"><span class="cl">    }
</span></span><span class="line"><span class="cl">    upstream xtls {
</span></span><span class="line"><span class="cl">        server 127.0.0.1:8443;       # Xray 本地监听端口
</span></span><span class="line"><span class="cl">    }
</span></span><span class="line"><span class="cl">    server {
</span></span><span class="line"><span class="cl">        listen 443 reuseport;
</span></span><span class="line"><span class="cl">        listen [::]:443 reuseport;
</span></span><span class="line"><span class="cl">        proxy_pass	$name;
</span></span><span class="line"><span class="cl">        ssl_preread on;               # 开启 ssl_preread
</span></span><span class="line"><span class="cl">    }
</span></span><span class="line"><span class="cl">}
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">http {
</span></span><span class="line"><span class="cl">	##
</span></span><span class="line"><span class="cl">	# Basic Settings
</span></span><span class="line"><span class="cl">	##
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	sendfile on;
</span></span><span class="line"><span class="cl">	tcp_nopush on;
</span></span><span class="line"><span class="cl">	tcp_nodelay on;
</span></span><span class="line"><span class="cl">	keepalive_timeout 65;
</span></span><span class="line"><span class="cl">	types_hash_max_size 2048;
</span></span><span class="line"><span class="cl">	# server_tokens off;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	# server_names_hash_bucket_size 64;
</span></span><span class="line"><span class="cl">	# server_name_in_redirect off;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	include /etc/nginx/mime.types;
</span></span><span class="line"><span class="cl">	default_type application/octet-stream;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	##
</span></span><span class="line"><span class="cl">	# SSL Settings
</span></span><span class="line"><span class="cl">	##
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
</span></span><span class="line"><span class="cl">	ssl_prefer_server_ciphers on;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	##
</span></span><span class="line"><span class="cl">	# Logging Settings
</span></span><span class="line"><span class="cl">	##
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	access_log /var/log/nginx/access.log;
</span></span><span class="line"><span class="cl">	error_log /var/log/nginx/error.log;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	##
</span></span><span class="line"><span class="cl">	# Gzip Settings
</span></span><span class="line"><span class="cl">	##
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	gzip on;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	# gzip_vary on;
</span></span><span class="line"><span class="cl">	# gzip_proxied any;
</span></span><span class="line"><span class="cl">	# gzip_comp_level 6;
</span></span><span class="line"><span class="cl">	# gzip_buffers 16 8k;
</span></span><span class="line"><span class="cl">	# gzip_http_version 1.1;
</span></span><span class="line"><span class="cl">	# gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	##
</span></span><span class="line"><span class="cl">	# Virtual Host Configs
</span></span><span class="line"><span class="cl">	##
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	include /etc/nginx/conf.d/*.conf;
</span></span><span class="line"><span class="cl">	include /etc/nginx/sites-enabled/*;     # 启用的网站配置放置在此文件夹下
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="bitwarden-相关配置" class="headerLink">
    <a href="#bitwarden-%e7%9b%b8%e5%85%b3%e9%85%8d%e7%bd%ae" class="header-mark"></a>Bitwarden 相关配置</h3><h4 id="frpsini" class="headerLink">
    <a href="#frpsini" class="header-mark"></a>frps.ini</h4><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[common]
</span></span><span class="line"><span class="cl">bind_port = xxxx                # 与本地 frpc 通信的端口
</span></span><span class="line"><span class="cl">vhost_https_port = xxxx         # 虚拟 https 端口，需要和 nginx.conf 内一致
</span></span><span class="line"><span class="cl">authentication_method = token
</span></span><span class="line"><span class="cl">token = xxxxxx                  # frp 验证密钥
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="bitwarden-nginx-站点配置" class="headerLink">
    <a href="#bitwarden-nginx-%e7%ab%99%e7%82%b9%e9%85%8d%e7%bd%ae" class="header-mark"></a>Bitwarden Nginx 站点配置</h4><p>放置在<code>/etc/nginx/sites-available/</code>下，文件与域名同名</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">## Bitwarden 配置。只负责只将 http 重定向至 https
</span></span><span class="line"><span class="cl">## Bitwarden 的 SSL 握手交给本地服务器端的 Nginx 处理
</span></span><span class="line"><span class="cl">server {
</span></span><span class="line"><span class="cl">        listen 80;
</span></span><span class="line"><span class="cl">        listen [::]:80;
</span></span><span class="line"><span class="cl">        server_name xxx.techkoala.net;                    # Bitwarden 域名
</span></span><span class="line"><span class="cl">        return 301 https://xxx.techkoala.net$request_uri; # Bitwarden 域名
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></td></tr></table>
</div>
</div><p>链接配置文件</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ln -s /etc/nginx/sites-available/xxx.techkoala.net /etc/nginx/sites-enabled/
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="trojan-相关配置" class="headerLink">
    <a href="#trojan-%e7%9b%b8%e5%85%b3%e9%85%8d%e7%bd%ae" class="header-mark"></a>Trojan 相关配置</h3><h4 id="trojan-nginx-配置" class="headerLink">
    <a href="#trojan-nginx-%e9%85%8d%e7%bd%ae" class="header-mark"></a>Trojan Nginx 配置</h4><p>放置在<code>/etc/nginx/sites-available/</code>下，文件与域名同名</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">server {
</span></span><span class="line"><span class="cl">    listen 127.0.0.1:80 default_server;
</span></span><span class="line"><span class="cl">    server_name xxx.techkoala.net;             # 自己的域名
</span></span><span class="line"><span class="cl">    location / {
</span></span><span class="line"><span class="cl">        proxy_pass https://www.digitalocean.com; # 伪装的网站
</span></span><span class="line"><span class="cl">    }
</span></span><span class="line"><span class="cl">}
</span></span><span class="line"><span class="cl">server {
</span></span><span class="line"><span class="cl">    listen 127.0.0.1:80;
</span></span><span class="line"><span class="cl">    server_name xxx.techkoala.net;                 # 自己服务器的 IP
</span></span><span class="line"><span class="cl">    return 301 https://xxx.techkoala.net$request_uri;  # 自己的域名
</span></span><span class="line"><span class="cl">}
</span></span><span class="line"><span class="cl">server {
</span></span><span class="line"><span class="cl">    listen 0.0.0.0:80;
</span></span><span class="line"><span class="cl">    listen [::]:80;
</span></span><span class="line"><span class="cl">    server_name _;
</span></span><span class="line"><span class="cl">    return 301 https://$host$request_uri;
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></td></tr></table>
</div>
</div><p>链接配置文件</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ln -s /etc/nginx/sites-available/xxx.techkoala.net /etc/nginx/sites-enabled/
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="trojan-配置文件" class="headerLink">
    <a href="#trojan-%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6" class="header-mark"></a>Trojan 配置文件</h4><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">{
</span></span><span class="line"><span class="cl">    &#34;run_type&#34;: &#34;server&#34;,
</span></span><span class="line"><span class="cl">    &#34;local_addr&#34;: &#34;0.0.0.0&#34;,
</span></span><span class="line"><span class="cl">    &#34;local_port&#34;: 4443,             # 本地监听端口，与 nginx.conf 保持一致
</span></span><span class="line"><span class="cl">    &#34;remote_addr&#34;: &#34;127.0.0.1&#34;,
</span></span><span class="line"><span class="cl">    &#34;remote_port&#34;: 80,              # 伪装站点的端口
</span></span><span class="line"><span class="cl">    &#34;password&#34;: [
</span></span><span class="line"><span class="cl">        &#34;xxxxxx&#34;                    # 密钥
</span></span><span class="line"><span class="cl">    ],
</span></span><span class="line"><span class="cl">    &#34;log_level&#34;: 1,
</span></span><span class="line"><span class="cl">    &#34;ssl&#34;: {
</span></span><span class="line"><span class="cl">        &#34;cert&#34;: &#34;/usr/local/etc/ssl/certificate.crt&#34;,
</span></span><span class="line"><span class="cl">        &#34;key&#34;: &#34;/usr/local/etc/ssl/private.key&#34;,
</span></span><span class="line"><span class="cl">        &#34;key_password&#34;: &#34;&#34;,
</span></span><span class="line"><span class="cl">        &#34;cipher&#34;: &#34;ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384&#34;,
</span></span><span class="line"><span class="cl">        &#34;cipher_tls13&#34;: &#34;TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_256_GCM_SHA384&#34;,
</span></span><span class="line"><span class="cl">        &#34;prefer_server_cipher&#34;: true,
</span></span><span class="line"><span class="cl">        &#34;alpn&#34;: [
</span></span><span class="line"><span class="cl">            &#34;http/1.1&#34;
</span></span><span class="line"><span class="cl">        ],
</span></span><span class="line"><span class="cl">        &#34;alpn_port_override&#34;: {
</span></span><span class="line"><span class="cl">            &#34;h2&#34;: 81
</span></span><span class="line"><span class="cl">        },
</span></span><span class="line"><span class="cl">        &#34;reuse_session&#34;: true,
</span></span><span class="line"><span class="cl">        &#34;session_ticket&#34;: false,
</span></span><span class="line"><span class="cl">        &#34;session_timeout&#34;: 600,
</span></span><span class="line"><span class="cl">        &#34;plain_http_response&#34;: &#34;&#34;,
</span></span><span class="line"><span class="cl">        &#34;curves&#34;: &#34;&#34;,
</span></span><span class="line"><span class="cl">        &#34;dhparam&#34;: &#34;&#34;
</span></span><span class="line"><span class="cl">    },
</span></span><span class="line"><span class="cl">    &#34;tcp&#34;: {
</span></span><span class="line"><span class="cl">        &#34;prefer_ipv4&#34;: false,
</span></span><span class="line"><span class="cl">        &#34;no_delay&#34;: true,
</span></span><span class="line"><span class="cl">        &#34;keep_alive&#34;: true,
</span></span><span class="line"><span class="cl">        &#34;reuse_port&#34;: false,
</span></span><span class="line"><span class="cl">        &#34;fast_open&#34;: false,
</span></span><span class="line"><span class="cl">        &#34;fast_open_qlen&#34;: 20
</span></span><span class="line"><span class="cl">    },
</span></span><span class="line"><span class="cl">    &#34;mysql&#34;: {
</span></span><span class="line"><span class="cl">        &#34;enabled&#34;: false,
</span></span><span class="line"><span class="cl">        &#34;server_addr&#34;: &#34;127.0.0.1&#34;,
</span></span><span class="line"><span class="cl">        &#34;server_port&#34;: 3306,
</span></span><span class="line"><span class="cl">        &#34;database&#34;: &#34;trojan&#34;,
</span></span><span class="line"><span class="cl">        &#34;username&#34;: &#34;trojan&#34;,
</span></span><span class="line"><span class="cl">        &#34;password&#34;: &#34;&#34;,
</span></span><span class="line"><span class="cl">        &#34;key&#34;: &#34;&#34;,
</span></span><span class="line"><span class="cl">        &#34;cert&#34;: &#34;&#34;,
</span></span><span class="line"><span class="cl">        &#34;ca&#34;: &#34;&#34;
</span></span><span class="line"><span class="cl">    }
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="freshrss-站点配置" class="headerLink">
    <a href="#freshrss-%e7%ab%99%e7%82%b9%e9%85%8d%e7%bd%ae" class="header-mark"></a>FreshRSS 站点配置</h3><p>放置在<code>/etc/nginx/sites-available/</code>下，文件与域名同名</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">server {
</span></span><span class="line"><span class="cl">        listen 80;
</span></span><span class="line"><span class="cl">        listen [::]:80;
</span></span><span class="line"><span class="cl">        server_name xxx.techkoala.net;
</span></span><span class="line"><span class="cl">        return 301 https://xxx.techkoala.net$request_uri;
</span></span><span class="line"><span class="cl">    }
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">server {
</span></span><span class="line"><span class="cl">    listen 39955 ssl http2;          # FreshRSS 本地监听端口
</span></span><span class="line"><span class="cl">    #===注意，nginx 1.25.1之后这里需要修改为
</span></span><span class="line"><span class="cl">    listen 39955 ssl; 
</span></span><span class="line"><span class="cl">    http2 on;
</span></span><span class="line"><span class="cl">    #===
</span></span><span class="line"><span class="cl">    server_name rss.techkoala.net;
</span></span><span class="line"><span class="cl">    ssl_certificate /etc/letsencrypt/live/xxx.techkoala.net/fullchain.pem;
</span></span><span class="line"><span class="cl">    ssl_certificate_key /etc/letsencrypt/live/xxx.techkoala.net/privkey.pem;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    location / {
</span></span><span class="line"><span class="cl">       proxy_pass http://127.0.0.1:39954;   # 转发到 FreshRSS 容器映射的端口
</span></span><span class="line"><span class="cl">    }
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></td></tr></table>
</div>
</div><p>链接配置文件</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ln -s /etc/nginx/sites-available/xxx.techkoala.net /etc/nginx/sites-enabled/
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="xray" class="headerLink">
    <a href="#xray" class="header-mark"></a>Xray</h3><h4 id="xray-nginx-配置" class="headerLink">
    <a href="#xray-nginx-%e9%85%8d%e7%bd%ae" class="header-mark"></a>Xray Nginx 配置</h4><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">server {
</span></span><span class="line"><span class="cl">        listen 80;
</span></span><span class="line"><span class="cl">        server_name xxx.techkoala.net;
</span></span><span class="line"><span class="cl">        if ($host = xxxx.techkoala.net) {
</span></span><span class="line"><span class="cl">                return 301 https://$host$request_uri;
</span></span><span class="line"><span class="cl">        }
</span></span><span class="line"><span class="cl">        return 404;
</span></span><span class="line"><span class="cl">}
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">server {
</span></span><span class="line"><span class="cl">        listen 127.0.0.1:23333;
</span></span><span class="line"><span class="cl">        server_name xxxx.techkoala.net;
</span></span><span class="line"><span class="cl">        location / {
</span></span><span class="line"><span class="cl">                proxy_pass https://www.digitalocean.com; # 伪装的网站
</span></span><span class="line"><span class="cl">        }
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="xray-配置" class="headerLink">
    <a href="#xray-%e9%85%8d%e7%bd%ae" class="header-mark"></a>Xray 配置</h4><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">{
</span></span><span class="line"><span class="cl">    &#34;log&#34;: {
</span></span><span class="line"><span class="cl">        &#34;loglevel&#34;: &#34;warning&#34;
</span></span><span class="line"><span class="cl">    },
</span></span><span class="line"><span class="cl">    &#34;inbounds&#34;: [
</span></span><span class="line"><span class="cl">        {
</span></span><span class="line"><span class="cl">            &#34;listen&#34;: &#34;127.0.0.1&#34;, # 仅监听在本地防止探测到下面的 8443 端口
</span></span><span class="line"><span class="cl">            &#34;port&#34;: 8443, # 这里的端口对应 nginx 主配置文件内的 upstream 端口
</span></span><span class="line"><span class="cl">            &#34;protocol&#34;: &#34;vless&#34;,
</span></span><span class="line"><span class="cl">            &#34;settings&#34;: {
</span></span><span class="line"><span class="cl">                &#34;clients&#34;: [
</span></span><span class="line"><span class="cl">                    {
</span></span><span class="line"><span class="cl">                        &#34;id&#34;: &#34;7f46753a-6a4b-4284-94c0-760340f96f1e&#34;, # 填写你的UUID
</span></span><span class="line"><span class="cl">                        &#34;flow&#34;: &#34;xtls-rprx-direct&#34;,
</span></span><span class="line"><span class="cl">                        &#34;level&#34;: 0
</span></span><span class="line"><span class="cl">                    }
</span></span><span class="line"><span class="cl">                ],
</span></span><span class="line"><span class="cl">                &#34;decryption&#34;: &#34;none&#34;,
</span></span><span class="line"><span class="cl">                &#34;fallbacks&#34;: [
</span></span><span class="line"><span class="cl">                    {
</span></span><span class="line"><span class="cl">                        &#34;dest&#34;: &#34;23333&#34; # 回落站点的端口号，与 Xray Nginx 配置一致
</span></span><span class="line"><span class="cl">                    }
</span></span><span class="line"><span class="cl">                 ]
</span></span><span class="line"><span class="cl">            },
</span></span><span class="line"><span class="cl">            &#34;streamSettings&#34;: {
</span></span><span class="line"><span class="cl">                &#34;network&#34;: &#34;tcp&#34;,
</span></span><span class="line"><span class="cl">                &#34;security&#34;: &#34;xtls&#34;,
</span></span><span class="line"><span class="cl">                &#34;xtlsSettings&#34;: {
</span></span><span class="line"><span class="cl">                    &#34;alpn&#34;: [
</span></span><span class="line"><span class="cl">                        &#34;http/1.1&#34;
</span></span><span class="line"><span class="cl">                    ],
</span></span><span class="line"><span class="cl">                    &#34;certificates&#34;: [
</span></span><span class="line"><span class="cl">                        {
</span></span><span class="line"><span class="cl">                            &#34;certificateFile&#34;: &#34;/usr/local/etc/ssl/fullchain.pem&#34;, # 你的域名证书
</span></span><span class="line"><span class="cl">                            &#34;keyFile&#34;: &#34;/usr/local/etc/ssl/privkey.pem&#34; # 你的证书私钥
</span></span><span class="line"><span class="cl">                        }
</span></span><span class="line"><span class="cl">                    ]
</span></span><span class="line"><span class="cl">                }
</span></span><span class="line"><span class="cl">            }
</span></span><span class="line"><span class="cl">        }
</span></span><span class="line"><span class="cl">    ],
</span></span><span class="line"><span class="cl">    &#34;outbounds&#34;: [
</span></span><span class="line"><span class="cl">        {
</span></span><span class="line"><span class="cl">            &#34;protocol&#34;: &#34;freedom&#34;
</span></span><span class="line"><span class="cl">        }
</span></span><span class="line"><span class="cl">    ]
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="防火墙设置" class="headerLink">
    <a href="#%e9%98%b2%e7%81%ab%e5%a2%99%e8%ae%be%e7%bd%ae" class="header-mark"></a>防火墙设置</h2><p>上述操作后，服务器需要打开<code>80</code>,<code>443</code>,<code>xxx</code>（frp 通信端口）</p>]]></description>
</item></channel>
</rss>
