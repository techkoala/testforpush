<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Linux - 分类 - TechKoala - Input/Output</title>
        <link>https://www.techkoala.net/categories/linux/</link>
        <description>Linux - 分类 - TechKoala - Input/Output</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>admin@techkoala.net (TechKoala)</managingEditor>
            <webMaster>admin@techkoala.net (TechKoala)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 04 Jun 2021 11:06:47 &#43;0800</lastBuildDate><atom:link href="https://www.techkoala.net/categories/linux/" rel="self" type="application/rss+xml" /><item>
    <title>不容错过的 Bash 技巧</title>
    <link>https://www.techkoala.net/bash_tricks/</link>
    <pubDate>Fri, 04 Jun 2021 11:06:47 &#43;0800</pubDate><author>
        <name>TechKoala</name>
    </author><guid>https://www.techkoala.net/bash_tricks/</guid>
    <description><![CDATA[<blockquote>
<p>一些提升 Bash 使用效率的小技巧</p>
</blockquote>
<p>在使用 Bash 时，我们通常使用 上 ↑ 下 ↓ 箭头来快速切换历史命令，然而一些重复的、不想要的命令（例如最简单的 ls，敲击比切换快，同时也会增加切换到别的命令的按键次数）也在历史记录里保存，这降低了切换的效率。下面一些技巧可以更好的帮助我们切换到想要的命令：</p>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw"></i>说明<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>下文中需要编辑的内容均在<code>.bashrc</code>中，使用常用的文本编辑器打开它，例如：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ vim ~/.bashrc
</span></span></code></pre></td></tr></table>
</div>
</div></div>
        </div>
    </div>
<h2 id="使用-histignore-移除历史记录中无意义的命令" class="headerLink">
    <a href="#%e4%bd%bf%e7%94%a8-histignore-%e7%a7%bb%e9%99%a4%e5%8e%86%e5%8f%b2%e8%ae%b0%e5%bd%95%e4%b8%ad%e6%97%a0%e6%84%8f%e4%b9%89%e7%9a%84%e5%91%bd%e4%bb%a4" class="header-mark"></a>使用 HISTIGNORE 移除历史记录中无意义的命令</h2><p>有一些命令极为常用常用、或者敲击简单，我们不想它出现在历史记录里，那么在<code>.bashrc</code>中添加下述内容忽略它即可：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">HISTIGNORE</span><span class="o">=</span><span class="s1">&#39;pwd:exit:fg:bg:top:clear:history:ls:uptime:df&#39;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>作为补充，如果我们不希望某些敏感的命令出现在历史记录中，例如在命令行中指定密码或 API 密钥，那么可以使用下面的选项来确保任何以<strong>空格</strong>开头的命令不会出现在历史文件中：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">HISTCONTROL</span><span class="o">=</span>ignorespace
</span></span></code></pre></td></tr></table>
</div>
</div><p>另外：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">HISTCONTROL</span><span class="o">=</span>ignoredups
</span></span></code></pre></td></tr></table>
</div>
</div><p>则表示当同一个命令重复出现时，只存储命令的一个副本。</p>
<h2 id="设置历史记录数量" class="headerLink">
    <a href="#%e8%ae%be%e7%bd%ae%e5%8e%86%e5%8f%b2%e8%ae%b0%e5%bd%95%e6%95%b0%e9%87%8f" class="header-mark"></a>设置历史记录数量</h2><p>为了防止不必要的丢失，可以适当的将记录数量调整的更大：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="nb">shopt</span> -s histappend
</span></span><span class="line"><span class="cl"><span class="nb">export</span> <span class="nv">HISTSIZE</span><span class="o">=</span><span class="m">10000</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="更有效的调用命令" class="headerLink">
    <a href="#%e6%9b%b4%e6%9c%89%e6%95%88%e7%9a%84%e8%b0%83%e7%94%a8%e5%91%bd%e4%bb%a4" class="header-mark"></a>更有效的调用命令</h2><p><code>!!</code>可以调用前一行的命令。</p>
<p>例如：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ <span class="nb">pwd</span>
</span></span><span class="line"><span class="cl">/etc
</span></span><span class="line"><span class="cl">$ !!
</span></span><span class="line"><span class="cl"><span class="nb">pwd</span>
</span></span><span class="line"><span class="cl">/etc
</span></span></code></pre></td></tr></table>
</div>
</div><p>同时，<code>!!</code>也可以作为参数加入别的命令配合使用，例如：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ sudo !!
</span></span></code></pre></td></tr></table>
</div>
</div><p>就将使用 root 权限再次执行此前的命令。</p>
<p>此外，我们还可以通过在历史命令提供的<strong>行号</strong>前加一个<code>!</code>来运行历史上的命令，但是请注意不要打错行号，避免执行出错：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ rm -r temp/
</span></span><span class="line"><span class="cl">$ mkdir temp
</span></span><span class="line"><span class="cl">$ touch temp/test
</span></span><span class="line"><span class="cl">$ !!
</span></span><span class="line"><span class="cl">touch temp/test
</span></span><span class="line"><span class="cl">$ <span class="nb">history</span> <span class="p">|</span> tail -4
</span></span><span class="line"><span class="cl">  <span class="m">179</span>  rm -r temp/
</span></span><span class="line"><span class="cl">  <span class="m">180</span>  mkdir temp
</span></span><span class="line"><span class="cl">  <span class="m">181</span>  touch temp/test
</span></span><span class="line"><span class="cl">  <span class="m">182</span>  touch temp/test
</span></span><span class="line"><span class="cl">  <span class="m">183</span>  <span class="nb">history</span> <span class="p">|</span> tail -5
</span></span><span class="line"><span class="cl">$ !179:p
</span></span><span class="line"><span class="cl">rm -r temp
</span></span><span class="line"><span class="cl">$ !180
</span></span><span class="line"><span class="cl">touch temp/test
</span></span></code></pre></td></tr></table>
</div>
</div><p>我们也可以用前面的<code>!</code>来调用一个命令的最后一次出现，例如:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ !ping
</span></span></code></pre></td></tr></table>
</div>
</div><p>将运行我们最后运行的以 <code>ping</code> 开头的命令。</p>
<p>为了上述内容出错，可以添加一个<code>:p</code>来显示命令内容，而不实际执行它们。</p>
<h2 id="使用--和--调用前一行参数" class="headerLink">
    <a href="#%e4%bd%bf%e7%94%a8--%e5%92%8c--%e8%b0%83%e7%94%a8%e5%89%8d%e4%b8%80%e8%a1%8c%e5%8f%82%e6%95%b0" class="header-mark"></a>使用 !$ 和 !* 调用前一行参数</h2><p>和<code>!!</code>不同，<code>!$</code>和<code>!*</code>仅指代前一行，命令的部分内容。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ mv list.txt items.txt
</span></span><span class="line"><span class="cl">$ vim !$
</span></span><span class="line"><span class="cl">vim items.txt
</span></span><span class="line"><span class="cl">$ cp !$ shopping.txt
</span></span><span class="line"><span class="cl">cp items.txt shopping.txt
</span></span></code></pre></td></tr></table>
</div>
</div><p>可以看到<code>!$</code>指代上一行命令的最后一个参数。</p>
<p>而<code>!*</code>指代上一行命令<strong>除了第一个</strong>以外的所有参数：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ rm /var/log/httpd/access.log /var/log/httpd/error.log
</span></span><span class="line"><span class="cl">$ touch !*
</span></span><span class="line"><span class="cl">touch /var/log/httpd/access.log /var/log/httpd/error.log
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="用--替换前一行的匹配词" class="headerLink">
    <a href="#%e7%94%a8--%e6%9b%bf%e6%8d%a2%e5%89%8d%e4%b8%80%e8%a1%8c%e7%9a%84%e5%8c%b9%e9%85%8d%e8%af%8d" class="header-mark"></a>用 ^ 替换前一行的匹配词</h2><p><code>^</code>符号允许你在切换一个匹配的单词后重复前一个命令，比如说：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ rm /var/log/httpd/error.log
</span></span><span class="line"><span class="cl">$ ^error^access
</span></span><span class="line"><span class="cl">rm /var/log/httpd/access.log
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="参考" class="headerLink">
    <a href="#%e5%8f%82%e8%80%83" class="header-mark"></a>参考</h2><ul>
<li>[1] <a href="https://cyb.org.uk/2021/05/03/bash-productivity.html" target="_blank" rel="noopener noreferrer">Be more productive with use of your BASH history</a></li>
</ul>]]></description>
</item><item>
    <title>Linux 系统信息查询</title>
    <link>https://www.techkoala.net/system_info/</link>
    <pubDate>Sun, 13 Sep 2020 22:35:06 &#43;0800</pubDate><author>
        <name>TechKoala</name>
    </author><guid>https://www.techkoala.net/system_info/</guid>
    <description><![CDATA[<blockquote>
<p>记录一些常用的 Linux 系统信息查询命令</p>
</blockquote>
<p>日常使用 Linux 过程中，偶尔会需要查询一下系统信息，特别是在对于使用云端主机时，了解必要的信息十分重要。本文总结了一些常用的信息以及相应的查询命令。</p>
<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw"></i>技巧<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">善用 grep 类命令作为配合，高效筛选想要的信息内容。</div>
        </div>
    </div>
<h2 id="系统信息" class="headerLink">
    <a href="#%e7%b3%bb%e7%bb%9f%e4%bf%a1%e6%81%af" class="header-mark"></a>系统信息</h2><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ uname -a              <span class="c1"># 查看内核/操作系统/CPU 信息</span>
</span></span><span class="line"><span class="cl">$ head -n <span class="m">1</span> /etc/issue  <span class="c1"># 查看操作系统版本</span>
</span></span><span class="line"><span class="cl">$ hostname              <span class="c1"># 查看计算机名</span>
</span></span><span class="line"><span class="cl">$ lspci -tv             <span class="c1"># 列出所有 PCI 设备</span>
</span></span><span class="line"><span class="cl">$ lsusb -tv             <span class="c1"># 列出所有 USB 设备</span>
</span></span><span class="line"><span class="cl">$ lsmod                 <span class="c1"># 列出加载的内核模块</span>
</span></span><span class="line"><span class="cl">$ env                   <span class="c1"># 查看环境变量</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="系统资源" class="headerLink">
    <a href="#%e7%b3%bb%e7%bb%9f%e8%b5%84%e6%ba%90" class="header-mark"></a>系统资源</h2><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ cat /proc/cpuinfo             <span class="c1"># 查看 CPU 信息</span>
</span></span><span class="line"><span class="cl">$ lscpu                         <span class="c1"># 查看 CPU 信息</span>
</span></span><span class="line"><span class="cl">$ lshw -short                   <span class="c1"># 当前服务器 CPU、内存、磁盘等详细信息</span>
</span></span><span class="line"><span class="cl">$ free -m                       <span class="c1"># 查看内存使用量和交换区使用量</span>
</span></span><span class="line"><span class="cl">$ df -h                         <span class="c1"># 查看各分区使用情况</span>
</span></span><span class="line"><span class="cl">$ du -sh                        <span class="c1"># 查看指定目录的大小</span>
</span></span><span class="line"><span class="cl">$ grep MemTotal /proc/meminfo   <span class="c1"># 查看内存总量</span>
</span></span><span class="line"><span class="cl">$ grep MemFree /proc/meminfo    <span class="c1"># 查看空闲内存量</span>
</span></span><span class="line"><span class="cl">$ uptime                        <span class="c1"># 查看系统运行时间、用户数、负载</span>
</span></span><span class="line"><span class="cl">$ cat /proc/loadavg             <span class="c1"># 查看系统负载</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="磁盘和分区" class="headerLink">
    <a href="#%e7%a3%81%e7%9b%98%e5%92%8c%e5%88%86%e5%8c%ba" class="header-mark"></a>磁盘和分区</h2><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ mount <span class="p">|</span> column -t         <span class="c1"># 查看挂接的分区状态</span>
</span></span><span class="line"><span class="cl">$ fdisk -l                  <span class="c1"># 查看所有分区</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="网络信息" class="headerLink">
    <a href="#%e7%bd%91%e7%bb%9c%e4%bf%a1%e6%81%af" class="header-mark"></a>网络信息</h2><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ ip                    <span class="c1"># 查看网络相关信息，具体用法参见 man 手册</span>
</span></span><span class="line"><span class="cl">$ iptables -L           <span class="c1"># 查看防火墙设置</span>
</span></span><span class="line"><span class="cl">$ route -n              <span class="c1"># 查看路由表</span>
</span></span><span class="line"><span class="cl">$ netstat -lntp         <span class="c1"># 查看所有监听端口</span>
</span></span><span class="line"><span class="cl">$ netstat -antp         <span class="c1"># 查看所有已经建立的连接</span>
</span></span><span class="line"><span class="cl">$ netstat -s            <span class="c1"># 查看网络统计信息</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="进程查询" class="headerLink">
    <a href="#%e8%bf%9b%e7%a8%8b%e6%9f%a5%e8%af%a2" class="header-mark"></a>进程查询</h2><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ ps -ef            <span class="c1"># 查看所有进程</span>
</span></span><span class="line"><span class="cl">$ top               <span class="c1"># 实时显示进程状态</span>
</span></span><span class="line"><span class="cl">$ htop              <span class="c1"># 实时显示进程状态，加强版 top</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="用户信息" class="headerLink">
    <a href="#%e7%94%a8%e6%88%b7%e4%bf%a1%e6%81%af" class="header-mark"></a>用户信息</h2><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ w                             <span class="c1"># 查看活动用户</span>
</span></span><span class="line"><span class="cl">$ id &lt;用户名&gt;                    <span class="c1"># 查看指定用户信息</span>
</span></span><span class="line"><span class="cl">$ last                          <span class="c1"># 查看用户登录日志</span>
</span></span><span class="line"><span class="cl">$ cut -d: -f1 /etc/passwd       <span class="c1"># 查看系统所有用户</span>
</span></span><span class="line"><span class="cl">$ cut -d: -f1 /etc/group        <span class="c1"># 查看系统所有组</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="服务" class="headerLink">
    <a href="#%e6%9c%8d%e5%8a%a1" class="header-mark"></a>服务</h2><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ crontab -l                    <span class="c1"># 查看当前用户的计划任务</span>
</span></span><span class="line"><span class="cl">$ chkconfig –list               <span class="c1"># 列出所有系统服务</span>
</span></span><span class="line"><span class="cl">$ chkconfig –list <span class="p">|</span> grep on     <span class="c1"># 列出所有启动的系统服务</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="软件信息" class="headerLink">
    <a href="#%e8%bd%af%e4%bb%b6%e4%bf%a1%e6%81%af" class="header-mark"></a>软件信息</h2><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ apt list --installed          <span class="c1"># 显示 apt 安装的软件</span>
</span></span><span class="line"><span class="cl">$ pacman -Qmeq                  <span class="c1"># 显示 aur 软件</span>
</span></span><span class="line"><span class="cl">$ pacman -Qneq                  <span class="c1"># 显示 pacman 安装的软件</span>
</span></span><span class="line"><span class="cl">$ pactree package_name          <span class="c1"># 显示软件的依赖树</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item><item>
    <title>Linux 安全分析与加固</title>
    <link>https://www.techkoala.net/linux_security/</link>
    <pubDate>Sun, 07 Jun 2020 23:22:43 &#43;0800</pubDate><author>
        <name>TechKoala</name>
    </author><guid>https://www.techkoala.net/linux_security/</guid>
    <description><![CDATA[<figure><a class="lightgallery" href="https://fastly.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/Linux/linux.png" title="https://fastly.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/Linux/linux.png" data-thumbnail="https://fastly.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/Linux/linux.png" data-sub-html="<h2>Linux</h2>">
        <img
            
            loading="lazy"
            src="https://fastly.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/Linux/linux.png"
            srcset="https://fastly.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/Linux/linux.png, https://fastly.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/Linux/linux.png 1.5x, https://fastly.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/Linux/linux.png 2x"
            sizes="auto"
            alt="https://fastly.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/Linux/linux.png">
    </a><figcaption class="image-caption">Linux</figcaption>
    </figure>
<blockquote>
<p>记录一些常见的 Linux 服务器安全问题分析以及防护措施</p>
</blockquote>
<h2 id="日志分析" class="headerLink">
    <a href="#%e6%97%a5%e5%bf%97%e5%88%86%e6%9e%90" class="header-mark"></a>日志分析</h2><h3 id="常用日志文件" class="headerLink">
    <a href="#%e5%b8%b8%e7%94%a8%e6%97%a5%e5%bf%97%e6%96%87%e4%bb%b6" class="header-mark"></a>常用日志文件</h3><p><code>Debian</code> 以及 <code>RHEL</code> 系的系统日志是由一个名为 <code>syslog</code> 的服务管理的，如以下日志文件都是由 <code>syslog</code> 日志服务驱动的：</p>
<p><code>/var/log/boot.log</code>：记录了系统在引导过程中发生的事件，就是 <code>Linux</code> 系统开机自检过程显示的信息</p>
<p><code>/var/log/lastlog</code> ：记录最后一次用户成功登陆的时间、登陆 <code>IP</code> 等信息</p>
<p><code>/var/log/messages</code> ：记录 <code>Linux</code> 操作系统常见的系统和服务错误信息</p>
<p><code>/var/log/secure</code> ：<code>Linux</code> 系统安全日志，记录用户和工作组变坏情况、用户登陆认证情况</p>
<p><code>/var/log/syslog</code>：只记录警告信息，常常是系统出问题的信息，使用 <code>lastlog</code> 查看</p>
<p><code>/var/log/wtmp</code>：该日志文件永久记录每个用户登录、注销及系统的启动、停机的事件，使用 last 命令查看</p>
<p><code>/var/run/utmp</code>：该日志文件记录有关当前登录的每个用户的信息。如 <code>who</code>、<code>w</code>、<code>users</code>、<code>finger</code> 等就需要访问这个文件</p>
<p><strong><code>/var/log/btmp</code>：记录 <code>Linux</code> 登陆失败的用户、时间以及远程 <code>IP</code> 地址</strong></p>
<p><strong><code>/var/log/auth.log</code> 或 <code>/var/log/secure</code> 存储来自可插拔认证模块 (PAM) 的日志，包括成功的登录，失败的登录尝试和认证方式。</strong></p>
<blockquote>
<p>注：<code>Debian</code> 系在 /var/log/auth.log 中存储认证信息而 <code>RHEL</code> 系则在 /var/log/secure 中存储。</p>
</blockquote>
<p><strong>Archlinux</strong> 使用 <code>systemd</code> 提供的日志系统（logging system），称为 <code>journal</code>。使用 <code>systemd</code> 日志，无需额外安装日志服务（<code>syslog</code>）。</p>
<h3 id="相关日志查看命令" class="headerLink">
    <a href="#%e7%9b%b8%e5%85%b3%e6%97%a5%e5%bf%97%e6%9f%a5%e7%9c%8b%e5%91%bd%e4%bb%a4" class="header-mark"></a>相关日志查看命令</h3><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ cat /var/log/secure <span class="p">|</span> awk <span class="s1">&#39;/Failed/{print $(NF-3)}&#39;</span> <span class="p">|</span> sort <span class="p">|</span> uniq -c <span class="p">|</span> awk <span class="s1">&#39;{print $2&#34;=&#34;$1;}&#39;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>查看尝试暴力登录 <code>root</code> 的 <code>IP</code> 及次数</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ grep <span class="s2">&#34;Failed password for root&#34;</span> /var/log/auth.log <span class="p">|</span> awk <span class="s1">&#39;{print $11}&#39;</span> <span class="p">|</span> sort <span class="p">|</span> uniq -c <span class="p">|</span> sort -nr <span class="p">|</span> more
</span></span></code></pre></td></tr></table>
</div>
</div><hr>
<h2 id="常见防护措施" class="headerLink">
    <a href="#%e5%b8%b8%e8%a7%81%e9%98%b2%e6%8a%a4%e6%8e%aa%e6%96%bd" class="header-mark"></a>常见防护措施</h2><h3 id="ssh" class="headerLink">
    <a href="#ssh" class="header-mark"></a>SSH</h3><h4 id="编辑-ssh-配置文件" class="headerLink">
    <a href="#%e7%bc%96%e8%be%91-ssh-%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6" class="header-mark"></a>编辑 SSH 配置文件</h4><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ vim /etc/ssh/sshd_config
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>1、修改端口</strong></p>
<p><code>#Port 22 —&gt; Port xxxx</code></p>
<p><strong>2、关闭 root 登录</strong></p>
<p><code>PermitRootLogin yes -&gt; PermitRootLogin no</code></p>
<p><strong>3、使用证书登录</strong></p>
<ul>
<li>
<p><strong>若不存在证书首先执行下面步骤</strong></p>
<p>在客户端生成密钥:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ ssh-keygen -t rsa
</span></span></code></pre></td></tr></table>
</div>
</div><p>把公钥拷贝至服务器:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ ssh-copy-id -i .ssh/id_rsa.pub server
</span></span></code></pre></td></tr></table>
</div>
</div><p>或手动将 id_rsa.pub 拷贝至服务器用户目录的.ssh 中，并修改访问权限：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ scp .shh/id_rsa.pub server:~/.ssh
</span></span></code></pre></td></tr></table>
</div>
</div><p>服务器中：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ chmod <span class="m">400</span> authorized_keys
</span></span></code></pre></td></tr></table>
</div>
</div></li>
</ul>
<p>打开证书登录：</p>
<p><code>RSAAuthentication yes</code></p>
<p>开启公钥验证：</p>
<p><code>PubkeyAuthentication yes</code></p>
<p>验证文件路径：</p>
<p><code>AuthorizedKeysFile .ssh/authorized_keys</code></p>
<p>禁止密码认证：</p>
<p><code>PasswordAuthentication no</code></p>
<p>禁止空密码：</p>
<p><code>PermitEmptyPasswords no</code></p>
<p><strong>最后，重启 SSHD 服务</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ systemctl restart sshd
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="用户以及用户组管理" class="headerLink">
    <a href="#%e7%94%a8%e6%88%b7%e4%bb%a5%e5%8f%8a%e7%94%a8%e6%88%b7%e7%bb%84%e7%ae%a1%e7%90%86" class="header-mark"></a>用户以及用户组管理</h3><h4 id="无用用户用户组" class="headerLink">
    <a href="#%e6%97%a0%e7%94%a8%e7%94%a8%e6%88%b7%e7%94%a8%e6%88%b7%e7%bb%84" class="header-mark"></a>无用用户、用户组</h4><p><strong>Linux 系统中可以删除的默认用户和组大致有如下这些：</strong></p>
<p>可删除的用户，如 <code>adm,lp,sync,shutdown,halt,news,uucp,operator,games,gopher</code> 等。</p>
<p>可删除的组，如 <code>adm,lp,news,uucp,games,dip,pppusers,popusers,slipusers</code> 等。</p>
<h4 id="空口令账户" class="headerLink">
    <a href="#%e7%a9%ba%e5%8f%a3%e4%bb%a4%e8%b4%a6%e6%88%b7" class="header-mark"></a>空口令账户</h4><p>使用如下命令检测空口令账户：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ awk -F: <span class="s1">&#39;$2==&#34;!!&#34; {print $1}&#39;</span> /etc/shadow
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后查看 <code>/etc/passwd</code> 确认空口令用户是否可以登录，选择是否加固密码。</p>
<h4 id="登录失败后强制延时" class="headerLink">
    <a href="#%e7%99%bb%e5%bd%95%e5%a4%b1%e8%b4%a5%e5%90%8e%e5%bc%ba%e5%88%b6%e5%bb%b6%e6%97%b6" class="header-mark"></a>登录失败后强制延时</h4><p>在 <code>/etc/pam.d/system-login</code> 中添加 <code>auth optional pam_faildelay.so delay=4000000</code>，表示延时 4 秒（单位微秒）</p>
<h4 id="限制-root-权限" class="headerLink">
    <a href="#%e9%99%90%e5%88%b6-root-%e6%9d%83%e9%99%90" class="header-mark"></a>限制 root 权限</h4><p>可以为单个用户启用单个程序的 <code>root</code> 权限，而不用为了运行一个程序启用该用户对 <code>root</code> 的完整访问权。例如，要授予用户 <code>alice</code> 对特定程序的访问权限：</p>
<p>编辑 <code>/etc/sudoers</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ visudo
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>
<p>若要指定 visudo 的默认编辑器，最好是修改 <code>/etc/sudoers</code> 中的 <code>Defaults editor=xxxx</code></p>
<p>而不是使用</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ <span class="nv">EDITOR</span><span class="o">=</span>nano visudo
</span></span></code></pre></td></tr></table>
</div>
</div><p>因为任何程序都可以通过该命令指定作为编辑器，存在风险。</p>
</li>
</ul>
<p>添加：</p>
<p><code>alice ALL = NOPASSWD: /path/to/program</code></p>
<h3 id="关闭不必要的服务" class="headerLink">
    <a href="#%e5%85%b3%e9%97%ad%e4%b8%8d%e5%bf%85%e8%a6%81%e7%9a%84%e6%9c%8d%e5%8a%a1" class="header-mark"></a>关闭不必要的服务</h3><p><strong>例如</strong> 某台 <code>Linux</code> 服务器用于 <code>www</code> 应用，那么除了 <code>httpd</code> 服务和系统运行是必须的服务外，其他服务都可以关闭。下面这些服务一般情况下是不需要的，可以选择关闭：</p>
<p><code>anacron、auditd、autofs、avahi-daemon、avahi-dnsconfd、bluetooth、cpuspeed、firstboot、gpm、haldaemon、hidd、ip6tables、ipsec、isdn、lpd、mcstrans、messagebus、netfs、nfs、nfslock、nscd、pcscd portmap、readahead_early、restorecond、rpcgssd、rpcidmapd、rstatd、sendmail、setroubleshoot、yppasswdd ypserv</code></p>
<h3 id="文件系统安全" class="headerLink">
    <a href="#%e6%96%87%e4%bb%b6%e7%b3%bb%e7%bb%9f%e5%ae%89%e5%85%a8" class="header-mark"></a>文件系统安全</h3><p><strong>文件权限检查和修改</strong></p>
<p><strong>（1）查找系统中任何用户都有写权限的文件或目录</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ find / -type f -perm -2 -o -perm -20 <span class="p">|</span>xargs ls -al //查找文件
</span></span><span class="line"><span class="cl">$ find / -type d -perm -2 -o -perm -20 <span class="p">|</span>xargs ls –ld //查找目录
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>（2）查找系统中所有含 “s” 位的程序</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ find / -type f -perm -4000 -o -perm -2000 -print <span class="p">|</span> xargs ls –al
</span></span></code></pre></td></tr></table>
</div>
</div><p>含有 “s” 位权限的程序对系统安全威胁很大，通过查找系统中所有具有 “s” 位权限的程序，可以把某些不必要的 “s” 位程序去掉，这样可以防止用户滥用权限或提升权限的可能性。</p>
<p><strong>（3）检查系统中所有 suid 及 sgid 文件</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ find / -user root -perm -2000 -print -exec md5sum <span class="o">{}</span> <span class="p">;</span>
</span></span><span class="line"><span class="cl">$ find / -user root -perm -4000 -print -exec md5sum <span class="o">{}</span> <span class="p">;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>将检查的结果保存到文件中，可在以后的系统检查中作为参考。</p>
<p><strong>（4）检查系统中没有属主的文件</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ find / -nouser -o –nogroup
</span></span></code></pre></td></tr></table>
</div>
</div><p>没有属主的孤儿文件比较危险，因此找到这些文件后，要么删除掉，要么修改文件的属主，使其处于安全状态。</p>
<h2 id="常用防护软件" class="headerLink">
    <a href="#%e5%b8%b8%e7%94%a8%e9%98%b2%e6%8a%a4%e8%bd%af%e4%bb%b6" class="header-mark"></a>常用防护软件</h2><h3 id="fail2ban" class="headerLink">
    <a href="#fail2ban" class="header-mark"></a>fail2ban</h3><p>fail2ban 通过扫描日志文件，筛选登录失败后继续频繁尝试登录的同一来源的非善意行为，根据用户定义的规则对访问来源做响应的封禁处理。</p>
<p><strong>1、安装</strong></p>
<p>以 debian 为例：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ sudo apt update
</span></span><span class="line"><span class="cl">$ sudo apt install fail2ban
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>2、复制配置文件</strong></p>
<p>fail2ban 安装在  <code>/etc/fail2ban</code> 路径下,监控目标在 /etc/fail2ban/jail.conf 文件中，官方建议自定义的监控目标放在 /etc/fail2ban/jail.local 或者在 /etc/fail2ban/jail.d 目录中新建配置文件。因此，这里首先复制一份本地配置文件：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ cp /etc/fail2ban/jail.conf /etc/fail2ban/jail.local
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>3、修改配置文件</strong></p>
<p>配置文件中的一些全局关键字段说明：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ignoreip = 127.0.0.1    # &#34;ignoreip&#34; 是指不会被禁止访问的主机地址，它可以是单 IP 地址、CIDR （汇聚网段）地址，甚至可以是 DNS （主机域名），若有多个条目，各条目间用空格分隔。
</span></span><span class="line"><span class="cl">bantime  = 3600         # &#34;bantime&#34; 字段设置禁止访问的时间间隔，以秒为单位。
</span></span><span class="line"><span class="cl">findtime  = 600         # &#34;findtime&#34; 是指在指定时间间隔内，达到或超过  &#34;Maxretry&#34;  次失败连接尝试，即被命中，禁止访问，以秒为单位。
</span></span><span class="line"><span class="cl">Maxretry = 3            # &#34;Maxretry&#34; 是指最大尝试次数。
</span></span></code></pre></td></tr></table>
</div>
</div><p>此外，fail2ban 使用 jail 的概念对每个需要保护的服务进行配置，其中配置文件中已经对常见的服务进行了预设，当然，你也可以自定义不同服务的详细信息。jail 的模板如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[xxx]                                #jail的名字
</span></span><span class="line"><span class="cl">enabled  = true                      #是否启用
</span></span><span class="line"><span class="cl">port     = xxxx                      #需要进行保护的端口
</span></span><span class="line"><span class="cl">filter   = xxxx                      #指定 SSH 监控使用的规则过滤配置文件，大量默认规则保存在 /etc/fail2ban/filter.d，使用默认规则直接输入名称即可。
</span></span><span class="line"><span class="cl">action   = xxxx                      #发现恶意IP后采取的操作。action.d 目录中预定义了许多常用操作，例如调用 iptables/firewalld 封禁、sendmail 发送通知邮件；
</span></span><span class="line"><span class="cl">logpath  = xxxxxxxx                  #指定 fail2ban 监控日志文件路径，可换行输入多个路径
</span></span><span class="line"><span class="cl">bantime = xxxx
</span></span><span class="line"><span class="cl">findtime = xxxx
</span></span><span class="line"><span class="cl">maxretry = xxxx
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="以保护-ssh-为例" class="headerLink">
    <a href="#%e4%bb%a5%e4%bf%9d%e6%8a%a4-ssh-%e4%b8%ba%e4%be%8b" class="header-mark"></a>以保护 SSH 为例</h4><p>编辑配置文件<code>jail.local</code>，开启 ssh 保护，其中可定义多个字段：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[ssh]
</span></span><span class="line"><span class="cl">enabled  = true
</span></span><span class="line"><span class="cl">port     = ssh
</span></span><span class="line"><span class="cl">filter   = sshd
</span></span><span class="line"><span class="cl">action   = iptables[name=SSH, port=ssh, protocol=tcp]
</span></span><span class="line"><span class="cl">logpath  = /var/log/auth.log
</span></span><span class="line"><span class="cl">maxretry = 6
</span></span></code></pre></td></tr></table>
</div>
</div><p>其余未设置的项尊崇全局设置。</p>
<p><strong>4、启动并查看状态</strong></p>
<p>配置好后保存配置文件，设置开启启动并启动 fail2ban：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ systemctl <span class="nb">enable</span> fail2ban
</span></span><span class="line"><span class="cl">$ systemctl start fail2ban
</span></span></code></pre></td></tr></table>
</div>
</div><p>查看 fail2ban 的运行状态</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ fail2ban-client status
</span></span></code></pre></td></tr></table>
</div>
</div><p>输出</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">Status
</span></span><span class="line"><span class="cl">|- Number of jail:      1
</span></span><span class="line"><span class="cl">`- Jail list:   sshd
</span></span></code></pre></td></tr></table>
</div>
</div><p>需要查看详情，则只需使用</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ fail2ban-client status sshd
</span></span></code></pre></td></tr></table>
</div>
</div><p>即可输出对应 jail 的详细信息，如：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">Status for the jail: sshd
</span></span><span class="line"><span class="cl">|- Filter
</span></span><span class="line"><span class="cl">|  |- Currently failed: 0
</span></span><span class="line"><span class="cl">|  |- Total failed:     2479
</span></span><span class="line"><span class="cl">|  `- File list:        /var/log/auth.log
</span></span><span class="line"><span class="cl">`- Actions
</span></span><span class="line"><span class="cl">   |- Currently banned: 4
</span></span><span class="line"><span class="cl">   |- Total banned:     118
</span></span><span class="line"><span class="cl">   `- Banned IP list:   31.184.198.75 173.212.240.196 116.110.108.227 171.227.208.32
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="参考" class="headerLink">
    <a href="#%e5%8f%82%e8%80%83" class="header-mark"></a>参考</h2><ul>
<li>
<p>[1] Linux 服务器为什么被黑？</p>
</li>
<li>
<p>[2] <a href="https://www.cnblogs.com/doublexi/p/9636506.html" target="_blank" rel="noopener noreferrer">linux 系统安全加固 &ndash; 账号相关</a></p>
</li>
<li>
<p>[3] <a href="https://wiki.archlinux.org/index.php/Security" target="_blank" rel="noopener noreferrer">Security - Archlinux Wiki</a></p>
</li>
</ul>]]></description>
</item><item>
    <title>查看 Linux 进程信息</title>
    <link>https://www.techkoala.net/process/</link>
    <pubDate>Mon, 02 Mar 2020 17:03:48 &#43;0800</pubDate><author>
        <name>TechKoala</name>
    </author><guid>https://www.techkoala.net/process/</guid>
    <description><![CDATA[<blockquote>
<p>Linux 中如何查看进程信息？</p>
</blockquote>
<p>Linux 中常使用 ps 命令显示当前运行中进程的相关信息的一份快照，包括 PID 等等。而 top 命令可以实时刷新进程信息，包括 CPU 占用，内存占用等等。</p>
<h2 id="ps-命令" class="headerLink">
    <a href="#ps-%e5%91%bd%e4%bb%a4" class="header-mark"></a>ps 命令</h2><p>Linux 上进程有 5 种状态：</p>
<ol>
<li>
<p>运行(正在运行或在运行队列中等待)</p>
</li>
<li>
<p>中断(休眠中, 受阻, 在等待某个条件的形成或接受到信号)</p>
</li>
<li>
<p>不可中断(收到信号不唤醒和不可运行, 进程必须等待直到有中断发生)</p>
</li>
<li>
<p>僵死(进程已终止, 但进程描述符存在, 直到父进程调用 wait4()系统调用后释放)</p>
</li>
<li>
<p>停止(进程收到 SIGSTOP, SIGSTP, SIGTIN, SIGTOU 信号后停止运行运行)</p>
</li>
</ol>
<p>ps 工具标识进程的 5 种状态码：</p>
<ul>
<li>
<p>D 不可中断 uninterruptible sleep (usually IO)</p>
</li>
<li>
<p>R 运行 runnable (on run queue)</p>
</li>
<li>
<p>S 中断 sleeping</p>
</li>
<li>
<p>T 停止 traced or stopped</p>
</li>
<li>
<p>Z 僵死 a defunct (“zombie”) process</p>
</li>
</ul>
<h3 id="语法" class="headerLink">
    <a href="#%e8%af%ad%e6%b3%95" class="header-mark"></a>语法</h3><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ ps <span class="o">[</span>选项<span class="o">]</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="选项" class="headerLink">
    <a href="#%e9%80%89%e9%a1%b9" class="header-mark"></a>选项</h3><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">-a：          显示所有终端机下执行的程序，除了阶段作业领导者之外。
</span></span><span class="line"><span class="cl">a：           显示现行终端机下的所有程序，包括其他用户的程序。
</span></span><span class="line"><span class="cl">-A：          显示所有程序。
</span></span><span class="line"><span class="cl">-c：          显示CLS和PRI栏位。
</span></span><span class="line"><span class="cl">c：           列出程序时，显示每个程序真正的指令名称，而不包含路径，选项或常驻服务的标示。
</span></span><span class="line"><span class="cl">-C&lt;指令名称&gt;： 指定执行指令的名称，并列出该指令的程序的状况。
</span></span><span class="line"><span class="cl">-d：          显示所有程序，但不包括阶段作业领导者的程序。
</span></span><span class="line"><span class="cl">-e：          此选项的效果和指定&#34;A&#34;选项相同。
</span></span><span class="line"><span class="cl">e：           列出程序时，显示每个程序所使用的环境变量。
</span></span><span class="line"><span class="cl">-f：          显示UID,PPIP,C与STIME栏位。
</span></span><span class="line"><span class="cl">f：           用ASCII字符显示树状结构，表达程序间的相互关系。
</span></span><span class="line"><span class="cl">g：           显示现行终端机下的所有程序，包括群组领导者的程序。
</span></span><span class="line"><span class="cl">-G&lt;群组识别码&gt;：列出属于该群组的程序的状况，也可使用群组名称来指定。
</span></span><span class="line"><span class="cl">h：           不显示标题列。
</span></span><span class="line"><span class="cl">-H：          显示树状结构，表示程序间的相互关系。
</span></span><span class="line"><span class="cl">-j或j：       采用工作控制的格式显示程序状况。
</span></span><span class="line"><span class="cl">-l或l：       采用详细的格式来显示程序状况。
</span></span><span class="line"><span class="cl">L：           列出栏位的相关信息。
</span></span><span class="line"><span class="cl">-m或m：       显示所有的执行绪。
</span></span><span class="line"><span class="cl">n：           以数字来表示USER和WCHAN栏位。
</span></span><span class="line"><span class="cl">-N：          显示所有的程序，除了执行ps指令终端机下的程序之外。
</span></span><span class="line"><span class="cl">-p&lt;程序识别码&gt;：指定程序识别码，并列出该程序的状况。
</span></span><span class="line"><span class="cl">r：           只列出现行终端机正在执行中的程序。
</span></span><span class="line"><span class="cl">-s&lt;阶段作业&gt;：  指定阶段作业的程序识别码，并列出隶属该阶段作业的程序的状况。
</span></span><span class="line"><span class="cl">s：           采用程序信号的格式显示程序状况。
</span></span><span class="line"><span class="cl">S：           列出程序时，包括已中断的子程序资料。
</span></span><span class="line"><span class="cl">-t&lt;终端机编号&gt;：指定终端机编号，并列出属于该终端机的程序的状况。
</span></span><span class="line"><span class="cl">-T：          显示现行终端机下的所有程序。
</span></span><span class="line"><span class="cl">u：           以用户为主的格式来显示程序状况。
</span></span><span class="line"><span class="cl">-U&lt;用户识别码&gt;：列出属于该用户的程序的状况，也可使用用户名称来指定。
</span></span><span class="line"><span class="cl">U&lt;用户名称&gt;：   列出属于该用户的程序的状况。
</span></span><span class="line"><span class="cl">v：           采用虚拟内存的格式显示程序状况。
</span></span><span class="line"><span class="cl">-V或V：       显示版本信息。
</span></span><span class="line"><span class="cl">-w或w：       采用宽阔的格式来显示程序状况。　
</span></span><span class="line"><span class="cl">x：           显示所有程序，不以终端机来区分。
</span></span><span class="line"><span class="cl">-y：          配合选项&#34;-l&#34;使用时，不显示F(flag)栏位，并以RSS栏位取代ADDR栏位。
</span></span><span class="line"><span class="cl">--headers：   重复显示标题列。
</span></span><span class="line"><span class="cl">--help：      在线帮助。
</span></span><span class="line"><span class="cl">--info：      显示排错信息。
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="实例" class="headerLink">
    <a href="#%e5%ae%9e%e4%be%8b" class="header-mark"></a>实例</h3><p>显示所有运行中的进程：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ ps aux <span class="p">|</span> less
</span></span></code></pre></td></tr></table>
</div>
</div><p>查看系统中的每个进程：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ ps -A
</span></span><span class="line"><span class="cl">或
</span></span><span class="line"><span class="cl">$ ps -e
</span></span></code></pre></td></tr></table>
</div>
</div><p>查看非 root 运行的进程：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ ps -U root -u root -N
</span></span></code></pre></td></tr></table>
</div>
</div><p>查看用户 xxx 运行的进程</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ ps -u xxx
</span></span></code></pre></td></tr></table>
</div>
</div><p>获得线程信息：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ ps -eLf
</span></span><span class="line"><span class="cl">$ ps axms
</span></span></code></pre></td></tr></table>
</div>
</div><p>获得安全信息：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ ps -eo euser,ruser,suser,fuser,f,comm,label
</span></span><span class="line"><span class="cl">$ ps axZ
</span></span><span class="line"><span class="cl">$ ps -eM
</span></span></code></pre></td></tr></table>
</div>
</div><p>显示进程的树状图：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ ps -ejH
</span></span><span class="line"><span class="cl">$ ps axjf
</span></span></code></pre></td></tr></table>
</div>
</div><p>此外 pstree 也可以以树状显示正在运行的进程。树的根节点为 pid 或 init。如果指定了用户名，进程树将以用户所拥有的进程作为根节点。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ pstree
</span></span></code></pre></td></tr></table>
</div>
</div><p>查找进程：</p>
<p>ps 可以打搭配 grep 进行指定关键词进程的查找：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ ps aux <span class="p">|</span> grep zsh
</span></span></code></pre></td></tr></table>
</div>
</div><p>此外使用 pgrep 也能查找当前正在运行的进程并列出符合条件的进程 ID。</p>
<p>例如显示 firefox 的进程 ID：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ pgrep firefox
</span></span></code></pre></td></tr></table>
</div>
</div><p>显示进程名为 sshd、所有者为 root 的进程：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ pgrep -u root sshd
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="top-命令" class="headerLink">
    <a href="#top-%e5%91%bd%e4%bb%a4" class="header-mark"></a>top 命令</h2><p>top 命令提供了运行中系统的动态实时视图。</p>
<h3 id="语法-1" class="headerLink">
    <a href="#%e8%af%ad%e6%b3%95-1" class="header-mark"></a>语法</h3><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ top <span class="o">[</span>参数<span class="o">]</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="参数" class="headerLink">
    <a href="#%e5%8f%82%e6%95%b0" class="header-mark"></a>参数</h3><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">-b        批处理
</span></span><span class="line"><span class="cl">-c        显示完整的治命令
</span></span><span class="line"><span class="cl">-I        忽略失效过程
</span></span><span class="line"><span class="cl">-s        保密模式
</span></span><span class="line"><span class="cl">-S        累积模式
</span></span><span class="line"><span class="cl">-i&lt;时间&gt;   设置间隔时间
</span></span><span class="line"><span class="cl">-u&lt;用户名&gt; 指定用户名
</span></span><span class="line"><span class="cl">-p&lt;进程号&gt; 指定进程
</span></span><span class="line"><span class="cl">-n&lt;次数&gt;   循环显示的次数
</span></span></code></pre></td></tr></table>
</div>
</div><figure><a class="lightgallery" href="https://fastly.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/Linux/Process/top.webp" title="https://fastly.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/Linux/Process/top.webp" data-thumbnail="https://fastly.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/Linux/Process/top.webp" data-sub-html="<h2>top 命令</h2>">
        <img
            
            loading="lazy"
            src="https://fastly.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/Linux/Process/top.webp"
            srcset="https://fastly.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/Linux/Process/top.webp, https://fastly.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/Linux/Process/top.webp 1.5x, https://fastly.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/Linux/Process/top.webp 2x"
            sizes="auto"
            alt="https://fastly.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/Linux/Process/top.webp">
    </a><figcaption class="image-caption">top 命令</figcaption>
    </figure>
<p>按 q 退出，按 h 进入帮助。</p>
<h3 id="实例-1" class="headerLink">
    <a href="#%e5%ae%9e%e4%be%8b-1" class="header-mark"></a>实例</h3><p>将进程快照储存到文件中：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ top -b -n1 &gt; /tmp/process.log
</span></span></code></pre></td></tr></table>
</div>
</div><p>将结果通过邮件发送：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ top -b -n1 <span class="p">|</span> mail -s <span class="s1">&#39;Process snapshot&#39;</span> you@example.com
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="htop" class="headerLink">
    <a href="#htop" class="header-mark"></a>Htop</h2><p>Htop 是一个类似 top 的交互式进程查看工具，可以垂直和水平滚动来查看所有进程和他们的命令行。进程的相关操作(killing，renicing)不需要输入 PID。Htop 一般需要自行安装。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ htop
</span></span></code></pre></td></tr></table>
</div>
</div><figure><a class="lightgallery" href="https://fastly.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/Linux/Process/htop.webp" title="https://fastly.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/Linux/Process/htop.webp" data-thumbnail="https://fastly.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/Linux/Process/htop.webp" data-sub-html="<h2>Htop 命令</h2>">
        <img
            
            loading="lazy"
            src="https://fastly.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/Linux/Process/htop.webp"
            srcset="https://fastly.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/Linux/Process/htop.webp, https://fastly.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/Linux/Process/htop.webp 1.5x, https://fastly.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/Linux/Process/htop.webp 2x"
            sizes="auto"
            alt="https://fastly.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/Linux/Process/htop.webp">
    </a><figcaption class="image-caption">Htop 命令</figcaption>
    </figure>
<h2 id="atop" class="headerLink">
    <a href="#atop" class="header-mark"></a>atop</h2><p>atop 是一个用来查看 Linux 系统负载的交互式监控工具。它能展现系统层级的关键硬件资源(从性能角度)的使用情况，如 CPU、内存、硬盘和网络。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ atop
</span></span></code></pre></td></tr></table>
</div>
</div><figure><a class="lightgallery" href="https://fastly.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/Linux/Process/atop.webp" title="https://fastly.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/Linux/Process/atop.webp" data-thumbnail="https://fastly.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/Linux/Process/atop.webp" data-sub-html="<h2>atop 命令</h2>">
        <img
            
            loading="lazy"
            src="https://fastly.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/Linux/Process/atop.webp"
            srcset="https://fastly.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/Linux/Process/atop.webp, https://fastly.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/Linux/Process/atop.webp 1.5x, https://fastly.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/Linux/Process/atop.webp 2x"
            sizes="auto"
            alt="https://fastly.jsdelivr.net/gh/techkoala/techkoala.github.io@master/images/Linux/Process/atop.webp">
    </a><figcaption class="image-caption">atop 命令</figcaption>
    </figure>
<h2 id="参考" class="headerLink">
    <a href="#%e5%8f%82%e8%80%83" class="header-mark"></a>参考</h2><ul>
<li>
<p>[1] <a href="https://os.51cto.com/art/201101/244090.htm" target="_blank" rel="noopener noreferrer">如何在 Linux 中查看所有正在运行的进程</a></p>
</li>
<li>
<p>[2] <a href="https://www.cnblogs.com/peida/archive/2012/12/19/2824418.html" target="_blank" rel="noopener noreferrer">每天一个linux命令（41）：ps命令</a></p>
</li>
</ul>]]></description>
</item><item>
    <title>使用 df 和 du 查看存储信息</title>
    <link>https://www.techkoala.net/command_df_du/</link>
    <pubDate>Thu, 10 Oct 2019 13:36:09 &#43;0800</pubDate><author>
        <name>TechKoala</name>
    </author><guid>https://www.techkoala.net/command_df_du/</guid>
    <description><![CDATA[<blockquote>
<p>Linux 中使用 df 和 du 查看磁盘以及文件存储信息的</p>
</blockquote>
<h2 id="df" class="headerLink">
    <a href="#df" class="header-mark"></a>df</h2><p>df 命令用于显示磁盘分区上的可使用的磁盘空间。主要用于查看一级文件夹大小、使用比例、档案系统及其挂入点，但<strong>无法</strong>查看单个文件大小。</p>
<p>默认显示单位为 KB。</p>
<h3 id="语法" class="headerLink">
    <a href="#%e8%af%ad%e6%b3%95" class="header-mark"></a>语法</h3><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">df <span class="o">[</span>选项<span class="o">]</span> <span class="o">[</span>参数<span class="o">]</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="选项" class="headerLink">
    <a href="#%e9%80%89%e9%a1%b9" class="header-mark"></a>选项</h3><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">-a或--all                                    包含全部的文件系统；
</span></span><span class="line"><span class="cl">--block-size<span class="o">=</span>&lt;区块大小&gt;                       以指定的区块大小来显示区块数目；
</span></span><span class="line"><span class="cl">-h或--human-readable                         以可读性较高的方式来显示信息；
</span></span><span class="line"><span class="cl">-H或--si                                     与-h参数相同，但在计算时是以1000 Bytes为换算单位而非1024 Bytes；
</span></span><span class="line"><span class="cl">-i或--inodes                                 显示inode的信息；
</span></span><span class="line"><span class="cl">-k或--kilobytes                              指定区块大小为1024字节；
</span></span><span class="line"><span class="cl">-l或--local                                  仅显示本地端的文件系统；
</span></span><span class="line"><span class="cl">-m或--megabytes                              指定区块大小为1048576字节；
</span></span><span class="line"><span class="cl">--no-sync                                    在取得磁盘使用信息前，不要执行sync指令，此为预设值；
</span></span><span class="line"><span class="cl">-P或--portability                            使用POSIX的输出格式；
</span></span><span class="line"><span class="cl">--sync                                       在取得磁盘使用信息前，先执行sync指令；
</span></span><span class="line"><span class="cl">-t&lt;文件系统类型&gt;或--type<span class="o">=</span>&lt;文件系统类型&gt;          仅显示指定文件系统类型的磁盘信息；
</span></span><span class="line"><span class="cl">-T或--print-type                             显示文件系统的类型；
</span></span><span class="line"><span class="cl">-x&lt;文件系统类型&gt;或--exclude-type<span class="o">=</span>&lt;文件系统类型&gt;  不要显示指定文件系统类型的磁盘信息；
</span></span><span class="line"><span class="cl">--help                                       显示帮助；
</span></span><span class="line"><span class="cl">--version                                    显示版本信息。
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="du" class="headerLink">
    <a href="#du" class="header-mark"></a>du</h2><p>du 命令是查看文件和目录磁盘使用的空间。</p>
<h3 id="语法-1" class="headerLink">
    <a href="#%e8%af%ad%e6%b3%95-1" class="header-mark"></a>语法</h3><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">du <span class="o">[</span>选项<span class="o">]</span> <span class="o">[</span>文件<span class="o">]</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="选项-1" class="headerLink">
    <a href="#%e9%80%89%e9%a1%b9-1" class="header-mark"></a>选项</h3><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">-a或-all                                显示目录中个别文件的大小。
</span></span><span class="line"><span class="cl">-b或-bytes                              显示目录或文件大小时，以byte为单位。
</span></span><span class="line"><span class="cl">-c或--total                             除了显示个别目录或文件的大小外，同时也显示所有目录或文件的总和。
</span></span><span class="line"><span class="cl">-k或--kilobytes                         以KB<span class="o">(</span>1024bytes<span class="o">)</span>为单位输出。
</span></span><span class="line"><span class="cl">-m或--megabytes                         以MB为单位输出。
</span></span><span class="line"><span class="cl">-s或--summarize                         仅显示总计，只列出最后加总的值。
</span></span><span class="line"><span class="cl">-h或--human-readable                    以K，M，G为单位，提高信息的可读性。
</span></span><span class="line"><span class="cl">-x或--one-file-xystem                   以一开始处理时的文件系统为准，若遇上其它不同的文件系统目录则略过。
</span></span><span class="line"><span class="cl">-L&lt;符号链接&gt;或--dereference&lt;符号链接&gt;      显示选项中所指定符号链接的源文件大小。
</span></span><span class="line"><span class="cl">-S或--separate-dirs                     显示个别目录的大小时，并不含其子目录的大小。
</span></span><span class="line"><span class="cl">-X&lt;文件&gt;或--exclude-from<span class="o">=</span>&lt;文件&gt;          在&lt;文件&gt;指定目录或文件。
</span></span><span class="line"><span class="cl">--exclude<span class="o">=</span>&lt;目录或文件&gt;                   略过指定的目录或文件。
</span></span><span class="line"><span class="cl">-D或--dereference-args                  显示指定符号链接的源文件大小。
</span></span><span class="line"><span class="cl">-H或--si                                与-h参数相同，但是K，M，G是以1000为换算单位。
</span></span><span class="line"><span class="cl">-l或--count-links                       重复计算硬件链接的文件。
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="实例" class="headerLink">
    <a href="#%e5%ae%9e%e4%be%8b" class="header-mark"></a>实例</h3><p>按文件大小排序：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ du -sh * <span class="p">|</span> sort -h
</span></span></code></pre></td></tr></table>
</div>
</div><p>显示目录或者文件所占空间：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ du
</span></span></code></pre></td></tr></table>
</div>
</div><p>显示指定文件所占空间：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ du xxxxx
</span></span></code></pre></td></tr></table>
</div>
</div><p>查看指定目录的所占空间：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ du scf
</span></span></code></pre></td></tr></table>
</div>
</div><p>显示多个文件所占空间：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ du xxxx.tar.gz yyyy.tar.gz
</span></span><span class="line"><span class="cl"><span class="m">4</span> xxxx.tar.gz
</span></span><span class="line"><span class="cl"><span class="m">4</span> yyyy.tar.gz
</span></span></code></pre></td></tr></table>
</div>
</div><p>只显示总和的大小:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ du -s
</span></span><span class="line"><span class="cl"><span class="m">1288</span> .
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ du -s scf
</span></span><span class="line"><span class="cl"><span class="m">32</span> scf
</span></span></code></pre></td></tr></table>
</div>
</div><p>显示总和的大小且易读:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">du -sh <span class="se">\$</span>dir
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item></channel>
</rss>
